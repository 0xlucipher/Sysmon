<Sysmon schemaversion="4.90">
<!--
  ==============================================================================
  TECHNIQUE MODULE: T1003 - OS Credential Dumping
  ==============================================================================

  MITRE ATT&CK: T1003
  Tactic: Credential Access
  Priority: CRITICAL
  Expected FP Rate: Low
  Estimated Events: 50-200/day

  DESCRIPTION:
  Detects attempts to dump credentials from operating system stores including:
  - T1003.001: LSASS Memory (Mimikatz, ProcDump, Task Manager)
  - T1003.002: Security Account Manager (SAM)
  - T1003.003: NTDS.dit (Domain Controller)
  - T1003.004: LSA Secrets
  - T1003.005: Cached Domain Credentials
  - T1003.006: DCSync
  - T1003.008: /etc/passwd and /etc/shadow (Linux)

  DETECTION STRATEGY:
  1. Monitor LSASS process access with suspicious access rights
  2. Detect raw disk access to SAM/SYSTEM hives
  3. Monitor for reg.exe accessing security-sensitive hives
  4. Detect comsvcs.dll MiniDump technique
  5. Monitor for ntds.dit file access

  REFERENCES:
  - https://attack.mitre.org/techniques/T1003/
  - JPCERT Tool Analysis Result Sheet
  - https://github.com/gentilkiwi/mimikatz

  ==============================================================================
-->

  <EventFiltering>

    <!-- ======================================================================
         LSASS Memory Dumping (T1003.001)
         ====================================================================== -->

    <RuleGroup name="T1003.001_LSASS_Memory" groupRelation="or">

      <!-- Event ID 10: ProcessAccess - LSASS Access -->
      <ProcessAccess onmatch="include">
        <Rule groupRelation="and">
          <TargetImage condition="end with">\lsass.exe</TargetImage>
          <!-- Exclude legitimate system access -->
          <SourceImage condition="is not">C:\Windows\System32\svchost.exe</SourceImage>
          <SourceImage condition="is not">C:\Windows\System32\wbem\WmiPrvSE.exe</SourceImage>
          <SourceImage condition="is not">C:\Windows\System32\csrss.exe</SourceImage>
          <SourceImage condition="is not">C:\Windows\System32\lsass.exe</SourceImage>
        </Rule>

        <!-- Dangerous access rights (PROCESS_VM_READ, PROCESS_VM_WRITE) -->
        <Rule groupRelation="and">
          <TargetImage condition="end with">\lsass.exe</TargetImage>
          <GrantedAccess condition="is">0x1010</GrantedAccess>  <!-- PROCESS_VM_READ | PROCESS_QUERY_INFORMATION -->
        </Rule>

        <Rule groupRelation="and">
          <TargetImage condition="end with">\lsass.exe</TargetImage>
          <GrantedAccess condition="is">0x1410</GrantedAccess>  <!-- PROCESS_VM_READ -->
        </Rule>

        <Rule groupRelation="and">
          <TargetImage condition="end with">\lsass.exe</TargetImage>
          <GrantedAccess condition="is">0x1438</GrantedAccess>  <!-- Mimikatz-like access -->
        </Rule>

        <Rule groupRelation="and">
          <TargetImage condition="end with">\lsass.exe</TargetImage>
          <GrantedAccess condition="is">0x143A</GrantedAccess>  <!-- Mimikatz-like access -->
        </Rule>

        <Rule groupRelation="and">
          <TargetImage condition="end with">\lsass.exe</TargetImage>
          <GrantedAccess condition="is">0x1FFFFF</GrantedAccess>  <!-- PROCESS_ALL_ACCESS -->
        </Rule>

        <!-- Call trace from unknown modules (injection) -->
        <Rule groupRelation="and">
          <TargetImage condition="end with">\lsass.exe</TargetImage>
          <CallTrace condition="contains">UNKNOWN</CallTrace>
        </Rule>
      </ProcessAccess>

      <!-- Event ID 1: ProcessCreate - Known credential dumping tools -->
      <ProcessCreate onmatch="include">
        <!-- Mimikatz -->
        <CommandLine condition="contains">sekurlsa</CommandLine>
        <CommandLine condition="contains">lsadump</CommandLine>
        <CommandLine condition="contains">kerberos::golden</CommandLine>

        <!-- ProcDump dumping LSASS -->
        <Rule groupRelation="and">
          <Image condition="end with">\procdump.exe</Image>
          <CommandLine condition="contains">lsass</CommandLine>
        </Rule>

        <Rule groupRelation="and">
          <Image condition="end with">\procdump64.exe</Image>
          <CommandLine condition="contains">lsass</CommandLine>
        </Rule>

        <!-- Generic process dumping LSASS by PID -->
        <Rule groupRelation="and">
          <CommandLine condition="contains">lsass</CommandLine>
          <CommandLine condition="contains">.dmp</CommandLine>
        </Rule>

        <!-- Comsvcs.dll MiniDump technique -->
        <Rule groupRelation="and">
          <CommandLine condition="contains">comsvcs.dll</CommandLine>
          <CommandLine condition="contains">MiniDump</CommandLine>
        </Rule>

        <Rule groupRelation="and">
          <CommandLine condition="contains">comsvcs</CommandLine>
          <CommandLine condition="contains">full</CommandLine>
        </Rule>

        <!-- Sysinternals NotMyFault / Process Explorer -->
        <Rule groupRelation="and">
          <CommandLine condition="contains">lsass</CommandLine>
          <CommandLine condition="contains">dump</CommandLine>
        </Rule>

        <!-- PowerShell credential dumping -->
        <Rule groupRelation="and">
          <Image condition="end with">\powershell.exe</Image>
          <CommandLine condition="contains">Get-Process lsass</CommandLine>
        </Rule>

        <Rule groupRelation="and">
          <Image condition="end with">\powershell.exe</Image>
          <CommandLine condition="contains">Invoke-Mimikatz</CommandLine>
        </Rule>

        <!-- SharpDump / SharpKatz -->
        <CommandLine condition="contains">SharpDump</CommandLine>
        <CommandLine condition="contains">SharpKatz</CommandLine>

        <!-- Dumpert -->
        <CommandLine condition="contains">Dumpert</CommandLine>
      </ProcessCreate>

      <!-- Event ID 11: FileCreate - LSASS dump files -->
      <FileCreate onmatch="include">
        <TargetFilename condition="contains">lsass</TargetFilename>
        <TargetFilename condition="end with">.dmp</TargetFilename>
      </FileCreate>

    </RuleGroup>


    <!-- ======================================================================
         SAM/SYSTEM Hive Access (T1003.002)
         ====================================================================== -->

    <RuleGroup name="T1003.002_SAM_Access" groupRelation="or">

      <!-- Event ID 9: RawAccessRead - Direct disk access to SAM -->
      <RawAccessRead onmatch="include">
        <!-- SAM/SYSTEM hive access -->
        <Device condition="contains">\Device\HarddiskVolumeShadowCopy</Device>
      </RawAccessRead>

      <!-- Event ID 1: ProcessCreate - Reg.exe saving SAM -->
      <ProcessCreate onmatch="include">
        <Rule groupRelation="and">
          <Image condition="end with">\reg.exe</Image>
          <CommandLine condition="contains">save</CommandLine>
          <CommandLine condition="contains">HKLM\SAM</CommandLine>
        </Rule>

        <Rule groupRelation="and">
          <Image condition="end with">\reg.exe</Image>
          <CommandLine condition="contains">save</CommandLine>
          <CommandLine condition="contains">HKLM\SYSTEM</CommandLine>
        </Rule>

        <Rule groupRelation="and">
          <Image condition="end with">\reg.exe</Image>
          <CommandLine condition="contains">save</CommandLine>
          <CommandLine condition="contains">HKLM\SECURITY</CommandLine>
        </Rule>

        <!-- Volume Shadow Copy access for SAM -->
        <Rule groupRelation="and">
          <CommandLine condition="contains">\\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy</CommandLine>
          <CommandLine condition="contains">\windows\system32\config\SAM</CommandLine>
        </Rule>

        <Rule groupRelation="and">
          <CommandLine condition="contains">\\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy</CommandLine>
          <CommandLine condition="contains">\windows\system32\config\SYSTEM</CommandLine>
        </Rule>

        <!-- Esentutl.exe copying SAM (alternative technique) -->
        <Rule groupRelation="and">
          <Image condition="end with">\esentutl.exe</Image>
          <CommandLine condition="contains">\config\SAM</CommandLine>
        </Rule>
      </ProcessCreate>

      <!-- Event ID 11: FileCreate - SAM dump files -->
      <FileCreate onmatch="include">
        <Rule groupRelation="and">
          <TargetFilename condition="contains">SAM</TargetFilename>
          <TargetFilename condition="is not">C:\Windows\System32\config\SAM</TargetFilename>
        </Rule>

        <Rule groupRelation="and">
          <TargetFilename condition="contains">SYSTEM</TargetFilename>
          <TargetFilename condition="contains">\Users\</TargetFilename>
        </Rule>
      </FileCreate>

    </RuleGroup>


    <!-- ======================================================================
         NTDS.dit Dumping (T1003.003)
         ====================================================================== -->

    <RuleGroup name="T1003.003_NTDS" groupRelation="or">

      <!-- Event ID 1: ProcessCreate - NTDS extraction -->
      <ProcessCreate onmatch="include">
        <!-- Ntdsutil.exe -->
        <Rule groupRelation="and">
          <Image condition="end with">\ntdsutil.exe</Image>
          <CommandLine condition="contains">create full</CommandLine>
        </Rule>

        <Rule groupRelation="and">
          <Image condition="end with">\ntdsutil.exe</Image>
          <CommandLine condition="contains">ifm</CommandLine>
        </Rule>

        <!-- PowerSploit Invoke-NinjaCopy -->
        <Rule groupRelation="and">
          <Image condition="end with">\powershell.exe</Image>
          <CommandLine condition="contains">Invoke-NinjaCopy</CommandLine>
        </Rule>

        <!-- VSS Admin creating shadow copy for NTDS -->
        <Rule groupRelation="and">
          <Image condition="end with">\vssadmin.exe</Image>
          <CommandLine condition="contains">create shadow</CommandLine>
          <CommandLine condition="contains">/for=C:</CommandLine>
        </Rule>

        <!-- Copying NTDS.dit from shadow copy -->
        <Rule groupRelation="and">
          <CommandLine condition="contains">copy</CommandLine>
          <CommandLine condition="contains">ntds.dit</CommandLine>
        </Rule>

        <!-- Esentutl.exe copying NTDS -->
        <Rule groupRelation="and">
          <Image condition="end with">\esentutl.exe</Image>
          <CommandLine condition="contains">ntds.dit</CommandLine>
        </Rule>
      </ProcessCreate>

      <!-- Event ID 11: FileCreate - NTDS.dit copies -->
      <FileCreate onmatch="include">
        <Rule groupRelation="and">
          <TargetFilename condition="contains">ntds</TargetFilename>
          <TargetFilename condition="end with">.dit</TargetFilename>
          <TargetFilename condition="is not">C:\Windows\NTDS\ntds.dit</TargetFilename>
        </Rule>
      </FileCreate>

    </RuleGroup>


    <!-- ======================================================================
         DCSync Attack (T1003.006)
         ====================================================================== -->

    <RuleGroup name="T1003.006_DCSync" groupRelation="or">

      <!-- Event ID 1: ProcessCreate - DCSync execution -->
      <ProcessCreate onmatch="include">
        <!-- Mimikatz DCSync -->
        <Rule groupRelation="and">
          <CommandLine condition="contains">lsadump::dcsync</CommandLine>
        </Rule>

        <!-- PowerShell DCSync (Invoke-Mimikatz, DSInternals) -->
        <Rule groupRelation="and">
          <Image condition="end with">\powershell.exe</Image>
          <CommandLine condition="contains">Get-ADReplAccount</CommandLine>
        </Rule>

        <Rule groupRelation="and">
          <Image condition="end with">\powershell.exe</Image>
          <CommandLine condition="contains">Invoke-DCSync</CommandLine>
        </Rule>

        <!-- Impacket secretsdump.py -->
        <Rule groupRelation="and">
          <CommandLine condition="contains">secretsdump</CommandLine>
          <CommandLine condition="contains">-just-dc</CommandLine>
        </Rule>
      </ProcessCreate>

      <!-- Event ID 3: NetworkConnect - DCSync replication -->
      <!-- Note: DCSync detection is better handled via Windows Event ID 4662 -->
      <!-- Sysmon can't directly detect the replication requests -->

    </RuleGroup>


    <!-- ======================================================================
         Cached Credentials (T1003.005)
         ====================================================================== -->

    <RuleGroup name="T1003.005_Cached_Creds" groupRelation="or">

      <!-- Event ID 13: Registry - Accessing cached credentials -->
      <RegistryEvent onmatch="include">
        <TargetObject condition="contains">\Cache\</TargetObject>
        <TargetObject condition="contains">\Control\Lsa\MSV1_0</TargetObject>
      </RegistryEvent>

    </RuleGroup>


    <!-- ======================================================================
         WDigest Enabling (Credential Caching)
         ====================================================================== -->

    <RuleGroup name="T1003_WDigest_Enable" groupRelation="or">

      <!-- Event ID 13: Registry - WDigest UseLogonCredential enabled -->
      <RegistryEvent onmatch="include">
        <Rule groupRelation="and">
          <TargetObject condition="contains">\System\CurrentControlSet\Control\SecurityProviders\WDigest\UseLogonCredential</TargetObject>
          <Details condition="is">DWORD (0x00000001)</Details>
        </Rule>
      </RegistryEvent>

    </RuleGroup>

  </EventFiltering>

</Sysmon>
